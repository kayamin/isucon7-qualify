user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    log_format ltsv "time:$time_local"
      "\thost:$remote_addr"
      "\tforwardedfor:$http_x_forwarded_for"
      "\treq:$request"
      "\tmethod:$request_method"
      "\turi:$request_uri"
      "\tstatus:$status"
      "\tsize:$body_bytes_sent"
      "\treferer:$http_referer"
      "\tua:$http_user_agent"
      "\treqtime:$request_time"
      "\truntime:$upstream_http_x_runtime"
      "\tapptime:$upstream_response_time"
      "\tcache:$upstream_http_x_cache"
      "\tvhost:$host";

    access_log  /var/log/nginx/access.log ltsv;
    access_log  /var/log/nginx/access.ltsv ltsv;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # キャッシュの場所を指定する
    proxy_cache_path /var/cache/nginx/proxy_file_cache levels=2:2 keys_zone=cache_key:10m max_size=5g inactive=24h;

    server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name isubata.example.com;

            client_max_body_size 20M;

            root /home/isucon/isubata/webapp/public;

            location /favicon.ico { }
            location /fonts/ { }
            location /js/ { }
            location /css/ { }

            location / {
                    proxy_set_header Host $http_host;
                    proxy_pass http://app:5000;

                    # 基本はキャッシュしない
                    set $do_not_cache 1;
                    # 画像のみキャッシュさせる
                    if ($uri ~* "\.(jpg|jpeg|png|gif|css|js|ico)$") {
                             set $do_not_cache 0;
                    }
                    proxy_no_cache $do_not_cache;

                    # キャッシュの検索
                    proxy_cache_bypass $do_not_cache;
                    # バックエンド no-cache を無視
                    proxy_ignore_headers Cache-Control;
                    # キャッシュの有効時間を指定
                    proxy_cache_valid 200 302 60m;
                    proxy_cache_valid 404 10m;
                    # キャッシュのステータスヘッダーを追加
                    add_header X-Cache-Status $upstream_cache_status;

            }
    }
}

